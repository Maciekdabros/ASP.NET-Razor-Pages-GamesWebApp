@page
@model GamesWebApp.Pages.Games.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h3>Details</h3>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Game.Content)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Game.Content != null)
            {
                <img class="img-responsive" style="max-width: 10vw; max-height: 10vw; margin-left: -15px; " src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Game.Content)" />
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Game.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Game.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Game.Price)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Game.Price)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Game.Category)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Game.Category)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Game.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Game.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Game.Type)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Game.Type)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Game.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Game.Status)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Game.Platform)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Game.Platform.Name)
        </dd>
    </dl>
</div>

@if (Model.Game.Status != Models.Game.GameStatus.Approved)
{
    @if ((await AuthorizationService.AuthorizeAsync(
    User, Model.Game, ContactOperations.Approve)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Game.GameID" />
            <input type="hidden" name="status" value="@Models.Game.GameStatus.Approved" />
            <button type="submit" class="btn btn-xs btn-success">Approve</button>
        </form>
    }
}

@if (Model.Game.Status != Models.Game.GameStatus.Rejected)
{
    @if ((await AuthorizationService.AuthorizeAsync(
    User, Model.Game, ContactOperations.Reject)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Game.GameID" />
            <input type="hidden" name="status" value="@Models.Game.GameStatus.Rejected" />
            <button type="submit" class="btn btn-xs btn-danger">Reject</button>
        </form>
    }
}

<div>
    @if ((await AuthorizationService.AuthorizeAsync(
        User, Model.Game,
        ContactOperations.Update)).Succeeded)
    {
        <a asp-page="./Edit" asp-route-id="@Model.Game.GameID">Edit</a>
        <text> | </text>
    }
    <a asp-page="./Index">Back to List</a>
</div>